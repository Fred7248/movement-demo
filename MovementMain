-- Services and events
local RS = game:GetService('ReplicatedStorage') 
local Events = RS:WaitForChild("Events")  -- Waits for the "Events" folder
local TweenService = game:GetService("TweenService")  -- Service for animations

-- Slam event
local Slam = Events:WaitForChild("Slam")

-- Dash events for different keys
local DashEvents = {
	D = Events:WaitForChild("DashRight"),
	A = Events:WaitForChild("DashLeft"),
	W = Events:WaitForChild("DashForward"),
	S = Events:WaitForChild("DashBackward"),
	E = Events:WaitForChild("DashUpward")
}

-- Configuration for dash actions
local DashConfig = {
	D = {count = 0, timeBetweenPress = 0, cooldown = 2, canDash = true, animName = "DashRight", rotate = Vector3.new(0, 0, 0)},
	A = {count = 0, timeBetweenPress = 0, cooldown = 2, canDash = true, animName = "DashLeft", rotate = Vector3.new(-90, 90, 90)},
	W = {count = 0, timeBetweenPress = 0, cooldown = 2, canDash = true, animName = "DashForward", rotate = Vector3.new(0, 90, 0)},
	S = {count = 0, timeBetweenPress = 0, cooldown = 2, canDash = true, animName = "DashBackward", rotate = Vector3.new(0, -90, 0)},
	E = {count = 0, timeBetweenPress = 0, cooldown = 2, canDash = true, animName = "DashUpward", rotate = Vector3.new(0, 90, 90)}
}

-- Function to handle dashing
local function handleDash(key, player)
	local char = player.Character
	local hrp = char:FindFirstChild("HumanoidRootPart")
	local config = DashConfig[key]
	local anim = char.Humanoid:LoadAnimation(script[config.animName])

	-- Determine direction based on key pressed
	local direction
	if key == "D" then
		direction = hrp.CFrame.RightVector
	elseif key == "A" then
		direction = -hrp.CFrame.RightVector
	elseif key == "W" then
		direction = hrp.CFrame.LookVector
	elseif key == "S" then
		direction = -hrp.CFrame.LookVector
	elseif key == "E" then
		direction = Vector3.new(0, 2.5, 0)
	end

	if config.canDash then
		config.count = config.count + 1
		if config.count == 2 then
			if config.timeBetweenPress < 0.3 then
				config.count = 0
				anim:Play()
				local dust = RS:WaitForChild("Dust"):Clone()
				dust.Parent = workspace.Debris
				dust.Position = hrp.Position
				dust.Orientation = hrp.Orientation + config.rotate
				TweenService:Create(dust, TweenInfo.new(0.5), {Transparency = 1, Size = dust.Size * 2}):Play()

				config.canDash = false
				hrp.CFrame = hrp.CFrame + direction * 10
				task.wait(config.cooldown)
				config.canDash = true

				-- Clean up dust
				repeat
					if dust.Transparency == 1 then
						dust:Destroy()
					end
					task.wait(0.1)
				until not dust
			else
				config.count = 1
			end
		end
		config.timeBetweenPress = 0
	end
end

-- Connect dash events to handleDash function
for key, event in pairs(DashEvents) do
	event.OnServerEvent:Connect(function(player)
		handleDash(key, player)
	end)
end

-- Function to handle slam effect
local function SlamEffect(HRP)
	local RayParams = RaycastParams.new()
	RayParams.FilterDescendantsInstances = {workspace.Debris}
	RayParams.FilterType = Enum.RaycastFilterType.Exclude
	local HitPosition = nil  -- Variable to store the hit position
	local Angle = 0
	local TotalPosition = Vector3.new(0, 0, 0)  -- Variable to accumulate positions of all parts
	local PartCount = 0  -- Counter for the number of parts
	for i = 1, 30 do
		local Size = math.random(2, 3) -- Randomize size
		local Part = Instance.new("Part") -- Create a new part
		Part.Anchored = true
		Part.Size = Vector3.new(1, 1, 1)
		Part.CFrame = HRP.CFrame * CFrame.fromEulerAnglesXYZ(0, math.rad(Angle), 0) * CFrame.new(10, 5, 0) -- Set the CFrame

			game.Debris:AddItem(Part, 5) -- Lifetime

			-- Cast a ray straight down from the feet to find the floor
			local GroundRay = workspace:Raycast(HRP.Parent.LeftFoot.Position, Vector3.new(0, -500, 0), RayParams)

			if GroundRay then
				-- Update the hit position if this raycast hits something
				if not HitPosition then
					HitPosition = GroundRay.Position
				end
			end

			-- Cast a ray downwards from the part's position
			local RayCast = workspace:Raycast(Part.CFrame.Position, Part.CFrame.UpVector * -500, RayParams)

			if RayCast then

				-- Ground hit, adjust part position based on hit position
				Part.Position = RayCast.Position
				Part.Position -= Vector3.new(0, RayCast.Position.Y, 0)
				Part.Position += Vector3.new(0, HitPosition.Y - 5, 0)
				Part.CanQuery = false
				Part.Material = RayCast.Instance.Material
				Part.Color = RayCast.Instance.Color
				Part.CanCollide = false
			end

			TotalPosition += Part.Position  -- Accumulate the position of the current part
			PartCount += 1  -- Increment the part counter

			Part.Size = Vector3.new(Size, Size, Size)
			Part.Orientation = Vector3.new(math.random(-180, 180), math.random(-180, 180), math.random(-180, 180))
			Part.Parent = workspace.Debris

			local tween = TweenService:Create(Part, TweenInfo.new(0.25, Enum.EasingStyle.Bounce, Enum.EasingDirection.InOut), {Position = Part.Position + Vector3.new(0, 5, 0)}):Play()
			delay(4, function()
				local Tween = TweenService:Create(Part, TweenInfo.new(1), {Transparency = 1, Position = Part.Position + Vector3.new(0, -5, 0)}):Play()
			end)

			Angle += 25
		end

		if HitPosition then
			local CenterPosition = TotalPosition / PartCount  -- Calculate the average position (center of the circle)

			local char = HRP.Parent -- Get the character
			local anim = char.Humanoid:LoadAnimation(script.Slam) -- Load the animation

			char:FindFirstChild("Humanoid").WalkSpeed = 0
			char:FindFirstChild("Humanoid").JumpHeight = 0
			-- Teleport the player just above the hit position
			HRP.CFrame = CFrame.new(CenterPosition.X, HitPosition.Y + HRP.Size.Y / 2 + 10, CenterPosition.Z)
			anim:Play()
			wait(0.25)

			local dust = RS:WaitForChild("SlamDust"):Clone()
			dust.Parent = workspace.Debris
			dust.CFrame = CFrame.new(CenterPosition.X, HitPosition.Y + HRP.Size.Y / 2, CenterPosition.Z)
			dust.Orientation = Vector3.new(0, 90, 90)

			local tween = TweenService:Create(dust, TweenInfo.new(0.3), {Transparency = 1, Size = Vector3.new(0.833, 26.12, 26.12)}):Play()
			local db = false

			dust.Touched:Connect(function(hit)
				if db == false then
					db = true
				local hitCharacter = hit.Parent
				if hitCharacter:FindFirstChild("Humanoid") and hitCharacter ~= char then
					hitCharacter.Humanoid:TakeDamage(25)

					local Speed = 40
					local Force = 80000

					local TotalForce = Force

					local KnockBack = Instance.new("BodyVelocity")
					KnockBack.Parent = hitCharacter:FindFirstChild("HumanoidRootPart") -- part is the target of the knockback

					KnockBack.MaxForce = Vector3.new(TotalForce, TotalForce, TotalForce)

					-- Calculate direction from the hit position to the center of the slam
					local direction = (hit.Position - CenterPosition).Unit
					KnockBack.Velocity = direction * Speed

					task.wait(0.3)
						KnockBack:Destroy()
						db = false
					end
				end
			end)
			anim.Ended:Wait()
			char:FindFirstChild("Humanoid").WalkSpeed = 16
			char:FindFirstChild("Humanoid").JumpHeight = 7.2

			repeat
				if dust.Transparency == 1 then
					dust:Destroy()
				end
				task.wait(0.1)
			until not dust
		end
end

-- Connect slam event to SlamEffect function
Slam.OnServerEvent:Connect(function(player)
	local char = player.Character
	local HRP = char.HumanoidRootPart

	local char = player.Character
	local HRP = char.HumanoidRootPart
	local debounce = false
	-- Raycast downward to check the distance from the ground
	local RayParams = RaycastParams.new()
	RayParams.FilterDescendantsInstances = {char}  -- Ignore the player's character in the raycast
	RayParams.FilterType = Enum.RaycastFilterType.Exclude
	local RayCast = workspace:Raycast(HRP.Position, Vector3.new(0, -500, 0), RayParams)
	if RayCast then
		local DistanceFromGround = (HRP.Position - RayCast.Position).Magnitude
		if DistanceFromGround > 20 then
			if debounce == false then
			debounce = true
			SlamEffect(HRP)
			debounce = false
			end
		end
	end
end)

-- Continuously track the time between presses
while true do
	for key, config in pairs(DashConfig) do
		if config.count > 0 then
			config.timeBetweenPress = config.timeBetweenPress + 0.1
		end
	end
	task.wait(0.1)
end

-- Im swowwy mr.vibe for making spaghetti code :(, I hope this is a bit better :)
